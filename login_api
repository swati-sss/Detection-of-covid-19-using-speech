import SwiftUI
import LivingDesign

final class MapContainerViewController: UIViewController {
    let mapRoot: LDRootViewController
    private var hasAppliedInitialLayout = false

    init(mapRoot: LDRootViewController) {
        self.mapRoot = mapRoot
        super.init(nibName: nil, bundle: nil)
    }
    required init?(coder: NSCoder) { fatalError("init(coder:) has not been implemented") }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        rehostIfNeeded()
    }

    func rehostIfNeeded() {
        let child = mapRoot
        var needsLayout = false

        if let parent = child.parent, parent !== self {
            child.willMove(toParent: nil)
            child.view.removeFromSuperview()
            child.removeFromParent()
        }

        if child.parent !== self {
            addChild(child)
            child.didMove(toParent: self)
        }

        if child.view.superview !== view {
            let v = child.view!
            v.translatesAutoresizingMaskIntoConstraints = false
            view.addSubview(v)
            NSLayoutConstraint.activate([
                v.leadingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.leadingAnchor),
                v.trailingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.trailingAnchor),
                v.topAnchor.constraint(equalTo: view.topAnchor), 
                v.bottomAnchor.constraint(equalTo: view.safeAreaLayoutGuide.bottomAnchor)
            ])
            needsLayout = true
        }

        if needsLayout && !hasAppliedInitialLayout {
            view.setNeedsLayout()
            view.layoutIfNeeded()
            hasAppliedInitialLayout = true
        }
    }
}

struct MapRootHost: UIViewControllerRepresentable {
    let viewController: LDRootViewController

    func makeUIViewController(context: Context) -> MapContainerViewController {
        MapContainerViewController(mapRoot: viewController)
    }

    func updateUIViewController(_ uiViewController: MapContainerViewController, context: Context) {
        uiViewController.rehostIfNeeded()
    }
}
