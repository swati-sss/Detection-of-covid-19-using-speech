private func createModHealthUploadRequest(
    image: UIImage,
    storeId: String,
    zoneId: String,
    aisleId: String,
    storeSectionId: String,
    userId: String
) -> URLRequest? {
    
    let urlString = "https://developer.api.us.stg.walmart.com/api-proxy/service/COMPASS/SERVICE/v4/mod-intel/upload-image"
    
    guard let url = URL(string: urlString),
          let authParam: AuthParameter = KeychainService.standard.getToken(),
          let imageData = image.jpegData(compressionQuality: 0.8) else {
        Log.error("Failed to prepare mod-health upload request components")
        return nil
    }
    
    var request = URLRequest(url: url)
    request.httpMethod = "POST"
    
    // Use auth from keychain exactly like the existing upload does
    request.addValue(authParam.consumerID, forHTTPHeaderField: RequestIdentifier.wmConsumerId.rawValue)
    request.addValue(RequestIdentifier.bearerSpace.rawValue + authParam.authToken,
                     forHTTPHeaderField: RequestIdentifier.authorization.rawValue)
    
    // Create multipart form data
    let boundary = "Boundary-\(UUID().uuidString)"
    request.setValue("multipart/form-data; boundary=\(boundary)", forHTTPHeaderField: "Content-Type")
    
    // Build multipart body similar to existing ImageUploader
    var body = Data()
    let boundaryPrefix = "--\(boundary)\r\n"
    
    // Helper to add form fields
    func appendFormField(name: String, value: String) {
        body.append(string: boundaryPrefix)
        body.append(string: "Content-Disposition: form-data; name=\"\(name)\"\r\n\r\n")
        body.append(string: "\(value)\r\n")
    }
    
    // Add all parameters
    appendFormField(name: "source", value: "MOD_HEALTH")
    appendFormField(name: "storeId", value: storeId)
    appendFormField(name: "zoneId", value: zoneId)
    appendFormField(name: "storeSectionId", value: storeSectionId)
    appendFormField(name: "aisleId", value: aisleId)
    appendFormField(name: "modSectionId", value: "0")
    appendFormField(name: "userId", value: userId)
    appendFormField(name: "taskId", value: "0")
    appendFormField(name: "uploadType", value: "IMAGE")
    appendFormField(name: "planogramId", value: "0")
    
    // Add image - following the pattern from existing ImageUploader
    body.append(string: boundaryPrefix)
    body.append(string: "Content-Disposition: form-data; name=\"image\"; filename=\"shelf_image.jpg\"\r\n")
    body.append(string: "Content-Type: image/jpeg\r\n\r\n")
    body.append(imageData)
    body.append(string: "\r\n")
    
    // Final boundary
    body.append(string: "--\(boundary)--\r\n")
    
    request.httpBody = body
    
    // Debug logging
    Log.info("MOD-HEALTH Upload Request:")
    Log.info("  URL: \(urlString)")
    Log.info("  Auth Token Type: \(authParam.tokenType)")
    Log.info("  Consumer ID: \(authParam.consumerID)")
    Log.info("  Body size: \(body.count) bytes")
    Log.info("  Image size: \(imageData.count) bytes")
    
    return request
}
