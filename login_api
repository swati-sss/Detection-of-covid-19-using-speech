struct AssetPinInputSheet: View {
    @Environment(\.dismiss) private var dismiss
    @State private var assetId = ""
    let onDisplay: (String) -> Void

    var body: some View {
        NavigationStack {
            Form {
                TextField("Asset ID", text: $assetId)
                    .textInputAutocapitalization(.never)
                    .autocorrectionDisabled()
            }
            .navigationTitle("Asset Pin")
            .toolbar {
                ToolbarItem(placement: .cancellationAction) {
                    Button("Cancel") { dismiss() }
                }
                ToolbarItem(placement: .confirmationAction) {
                    Button("Display Pin") {
                        onDisplay(assetId)
                        dismiss()
                    }
                    .disabled(assetId.trimmingCharacters(in: .whitespacesAndNewlines).isEmpty)
                }
            }
        }
    }
}

struct GenericPinInputSheet: View {
    @Environment(\.dismiss) private var dismiss
    @State private var encodedId = ""
    @State private var type = "GENERIC"   // optional; keep default
    let onDisplay: (_ encodedId: String, _ type: String?) -> Void

    var body: some View {
        NavigationStack {
            Form {
                TextField("Encoded ID", text: $encodedId)
                    .textInputAutocapitalization(.never)
                    .autocorrectionDisabled()
                TextField("Type (optional)", text: $type)
                    .textInputAutocapitalization(.never)
                    .autocorrectionDisabled()
            }
            .navigationTitle("Generic Pin")
            .toolbar {
                ToolbarItem(placement: .cancellationAction) {
                    Button("Cancel") { dismiss() }
                }
                ToolbarItem(placement: .confirmationAction) {
                    Button("Display Pin") {
                        onDisplay(encodedId, type.isEmpty ? nil : type)
                        dismiss()
                    }
                    .disabled(encodedId.trimmingCharacters(in: .whitespacesAndNewlines).isEmpty)
                }
            }
        }
    }
}
