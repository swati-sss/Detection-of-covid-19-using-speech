// MapRootHost.swift
import SwiftUI
import LivingDesign

struct MapRootHost: UIViewControllerRepresentable {
    let bridge: CompassBridge

    func makeUIViewController(context: Context) -> UIViewController {
        let container = UIViewController()
        attachMap(into: container)
        return container
    }

    func updateUIViewController(_ uiViewController: UIViewController, context: Context) {
        // Ensure it's attached to THIS container (navigation can swap containers)
        attachMap(into: uiViewController)
    }

    private func attachMap(into container: UIViewController) {
        let child = bridge.mapRootViewController

        // If the map is already mounted under a different parent, detach first
        if let oldParent = child.parent, oldParent !== container {
            child.willMove(toParent: nil)
            child.view.removeFromSuperview()
            child.removeFromParent()
        }

        // If not already attached to this container, attach it
        guard child.parent !== container else { return }

        container.addChild(child)
        child.view.frame = container.view.bounds
        child.view.autoresizingMask = [.flexibleWidth, .flexibleHeight]
        container.view.addSubview(child.view)
        child.didMove(toParent: container)
    }
}
