private func createModHealthUploadRequest(
    image: UIImage,
    storeId: String,
    zoneId: String,
    aisleId: String,
    storeSectionId: String,
    userId: String
) -> URLRequest? {
    
    let urlString = "https://developer.api.us.stg.walmart.com/api-proxy/service/COMPASS/SERVICE/v4/mod-intel/upload-image"
    
    guard let url = URL(string: urlString),
          let imageData = image.jpegData(compressionQuality: 0.8) else {
        Log.error("Failed to prepare mod-health upload request components")
        return nil
    }
    
    var request = URLRequest(url: url)
    request.httpMethod = "POST"
    
    // Set headers using the same credentials as your initialization
    let boundary = "Boundary-\(UUID().uuidString)"
    request.setValue("multipart/form-data; boundary=\(boundary)", forHTTPHeaderField: "Content-Type")
    
    // Try using the same client secret from your initialization instead of keychain token
    let clientSecret = "Uhcqt1EBCq3COum7WhGK4b0Pre0TyMndfqMsCslnzyd70Zc5Xy1NI-pyCARRNG0qQvkI2iVv2s7sKGBiTwz_PQ"
    let clientId = "c061c52a-b978-4ae9-9875-6584e58e8a74"
    
    request.setValue("Bearer \(clientSecret)", forHTTPHeaderField: "Authorization")
    request.setValue(clientId, forHTTPHeaderField: "wm_consumer.id")
    
    Log.info("=== USING DIRECT CREDENTIALS ===")
    Log.info("Client ID: \(clientId)")
    Log.info("Using client secret as Bearer token")
    Log.info("=== END CREDENTIALS ===")
    
    // Rest of the multipart body creation stays the same...
    var body = Data()
    
    func appendFormField(name: String, value: String) {
        body.append("--\(boundary)\r\n".data(using: .utf8)!)
        body.append("Content-Disposition: form-data; name=\"\(name)\"\r\n\r\n".data(using: .utf8)!)
        body.append("\(value)\r\n".data(using: .utf8)!)
    }
    
    appendFormField(name: "source", value: "MOD_HEALTH")
    appendFormField(name: "storeId", value: storeId)
    appendFormField(name: "zoneId", value: zoneId)
    appendFormField(name: "storeSectionId", value: storeSectionId)
    appendFormField(name: "aisleId", value: aisleId)
    appendFormField(name: "modSectionId", value: "0")
    appendFormField(name: "userId", value: userId)
    appendFormField(name: "taskId", value: "0")
    appendFormField(name: "uploadType", value: "IMAGE")
    appendFormField(name: "planogramId", value: "0")
    
    body.append("--\(boundary)\r\n".data(using: .utf8)!)
    body.append("Content-Disposition: form-data; name=\"image\"; filename=\"shelf_image.jpg\"\r\n".data(using: .utf8)!)
    body.append("Content-Type: image/jpeg\r\n\r\n".data(using: .utf8)!)
    body.append(imageData)
    body.append("\r\n".data(using: .utf8)!)
    
    body.append("--\(boundary)--\r\n".data(using: .utf8)!)
    
    request.httpBody = body
    
    Log.info("Created mod-health upload request. Body size: \(body.count) bytes")
    return request
}
